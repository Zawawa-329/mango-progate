<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <title>カレンダー表示</title>
    <link rel="stylesheet" href="/styles.css" />
    <style>
      .transaction-photo {
        max-width: 100px;
        max-height: 100px;
        display: block;
        margin-top: 5px;
        margin-bottom: 5px;
        border-radius: 4px;
        border: 1px solid #ddd;
      }
      .transaction-location {
        font-size: 0.9em;
        color: #666;
        margin-top: 4px;
      }
      .transaction-location::before {
        content: '📍'; /* 地図の絵文字 */
        margin-right: 4px;
      }
    </style>
  </head>
  <body>
    <header>
      <h1><a href="/dashboard">📅 My 家計簿カレンダー</a></h1>
      <nav>
        <% if (user) { %>
            <span>こんにちは, <%= user.email %> さん</span>
            |
            <a href="/register">登録ページへ</a>
            |
            <a href="/map">地図で見る</a> |
            <a href="/logout">ログアウト</a>
        <% } %>
      </nav>
      <% if (balance && typeof balance.balance !== 'undefined') { %>
        <p style="font-weight:bold; color:#a68076; background:#fff3e6; border:2px solid #eac4af; border-radius:10px; display:inline-block; padding:0.5em 1.2em; margin-top:1em; margin-bottom:0; font-size:1.2em;">
          現在の残高: <span style="color:#efc3c2;"><%= balance.balance %></span> 円
          <span style="font-size:0.8em; color:#a68076;">（<%= new Date(balance.updated_at).toLocaleString() %> 時点）</span>
        </p>
      <% } else { %>
        <p style="font-weight:bold; color:#a68076; background:#fff3e6; border:2px solid #eac4af; border-radius:10px; display:inline-block; padding:0.5em 1.2em; margin-top:1em; margin-bottom:0; font-size:1.2em;">
          現在の残高は登録されていません
        </p>
      <% } %>
    </header>
    <main>
      <section class="calendar-section">
        <form method="get" action="/dashboard" style="margin-bottom: 1em; display: flex; gap: 1em; align-items: center;">
          <label>年 <select name="year">
              <% for(let y = 2020; y <= 2030; y++) { %><option value="<%= y %>" <%= currentDate.getFullYear() === y ? 'selected' : '' %>><%= y %></option><% } %>
            </select></label>
          <label>月 <select name="month">
              <% for(let m = 1; m <= 12; m++) { %><option value="<%= m %>" <%= currentDate.getMonth() + 1 === m ? 'selected' : '' %>><%= m %></option><% } %>
            </select></label>
          <button type="submit">表示</button>
        </form>
        <h2><%= currentDate.getFullYear() %>年 <%= currentDate.getMonth() + 1 %>月 のカレンダー</h2>
        <% 
          const year = currentDate.getFullYear();
          const month = currentDate.getMonth();
          function isThisMonth(dateStr) { const d = new Date(dateStr); return d.getFullYear() === year && d.getMonth() === month; }
          function isIncome(t) { const val = (t.type || '').toString().trim(); return val.includes('収入') || val.includes('入金') || val.toLowerCase().includes('income'); }
          function isExpense(t) { const val = (t.type || '').toString().trim(); return val.includes('支出') || val.includes('出金') || val.toLowerCase().includes('expense'); }
          const monthPaypays = paypays.filter(t => isThisMonth(t.date));
          const monthComecomes = comecomes.filter(t => isThisMonth(t.date));
          const incomeSum = monthPaypays.filter(isIncome).reduce((sum, t) => sum + Number(t.amount), 0) + monthComecomes.filter(isIncome).reduce((sum, t) => sum + Number(t.amount), 0);
          const expenseSum = monthPaypays.filter(isExpense).reduce((sum, t) => sum + Number(t.amount), 0) + monthComecomes.filter(isExpense).reduce((sum, t) => sum + Number(t.amount), 0);
          const diff = incomeSum - expenseSum;
          const diffColor = diff >= 0 ? '#b7d7c6' : '#efc3c2';
        %>
        <div style="margin-bottom:1em; padding:0.7em 1.5em; background:#f8ede3; border-radius:12px; border:1.5px solid #eac4af; display:inline-block; font-size:1.1em; color:#a68076;">
          <span style="margin-right:1.5em;">収入合計: <span style="color:#b7d7c6; font-weight:bold; font-size:1.1em;"><%= totalPaypay || 0 %></span> 円</span>
          <span style="margin-right:1.5em;">支出合計: <span style="color:#efc3c2; font-weight:bold; font-size:1.1em;"><%= totalComecome || 0 %></span> 円</span>
          <span>差額: <span <%= 'style="color:' + diffColor + '; font-weight:bold; font-size:1.1em;"' %>><%= totalPaypay - totalComecome || 0 %></span> 円</span>
        </div>

        <div class="calendar-grid">
          <% const daysOfWeek = ['日', '月', '火', '水', '木', '金', '土']; %>
          <% daysOfWeek.forEach(day => { %><div class="calendar-cell header"><%= day %></div><% }) %>
          <% 
             const firstDay = new Date(year, month, 1);
             const lastDay = new Date(year, month + 1, 0);
             const numDays = lastDay.getDate();
             const startWeekday = firstDay.getDay();
             let dayCounter = 1;
             const totalCells = Math.ceil((startWeekday + numDays) / 7) * 7;
          %>
          <% for(let i = 0; i < totalCells; i++) { %>
            <% if(i < startWeekday || dayCounter > numDays) { %>
              <div class="calendar-cell empty"></div>
            <% } else { 
                 const dateStr = new Date(year, month, dayCounter).toISOString().split('T')[0];
                 const dayPaypays = paypays.filter(t => t.date === dateStr);
                 const dayComecomes = comecomes.filter(t => t.date === dateStr);
            %>
              <div class="calendar-cell">
                <div class="date-number"><%= dayCounter %></div>
                
                <% dayPaypays.forEach(tx => { %>
                  <div class="transaction">
                    <% if (tx.photo_filename) { %>
                      <img src="/uploads/<%= tx.photo_filename %>" alt="取引の写真" class="transaction-photo">
                    <% } %>
                    <span><%= tx.description || tx.type %></span>: <%= tx.amount %> 円
                    <% if (tx.location_name) { %>
                      <div class="transaction-location"><%= tx.location_name %></div>
                    <% } %>
                    <div>
                      [<a href="/edit-paypay/<%= tx.id %>">編集</a>]
                      [<a href="/delete-paypay/<%= tx.id %>" onclick="return confirm('削除しますか？');">削除</a>]
                    </div>
                  </div>
                <% }) %>

                <% dayComecomes.forEach(tx => { %>
                  <div class="transaction">
                    <% if (tx.photo_filename) { %>
                      <img src="/uploads/<%= tx.photo_filename %>" alt="取引の写真" class="transaction-photo">
                    <% } %>
                    <span><%= tx.description || tx.type %></span>: <%= tx.amount %> 円
                     <% if (tx.location_name) { %>
                      <div class="transaction-location"><%= tx.location_name %></div>
                    <% } %>
                    <div>
                      [<a href="/edit-comecome/<%= tx.id %>">編集</a>]
                      [<a href="/delete-comecome/<%= tx.id %>" onclick="return confirm('削除しますか？');">削除</a>]
                    </div>
                  </div>
                  <% }) %>
              </div>
              <% dayCounter++ %>
            <% } %>
          <% } %>
        </div>
      </section>
    </main>
  </body>
</html>